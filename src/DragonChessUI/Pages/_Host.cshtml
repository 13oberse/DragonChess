@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace DragonChessUI.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="~/"/>
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css"/>
    <link href="css/site.css" rel="stylesheet"/>
    <link href="DragonChessUI.styles.css" rel="stylesheet"/>
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered"/>
</head>
<body>
<component type="typeof(App)" render-mode="ServerPrerendered"/>

<div id="blazor-error-ui">
    <environment include="Staging,Production">
        An error has occurred. This application may no longer respond until reloaded.
    </environment>
    <environment include="Development">
        An unhandled exception has occurred. See browser dev tools for details.
    </environment>
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<script src="_framework/blazor.server.js"></script>
<script src="_content/Blazor.Extensions.Canvas/blazor.extensions.canvas.js"></script>
<script>
    function getDivCanvasOffsets(el) {
        let obj = {};
        obj.offsetLeft = el.offsetLeft;
        obj.offsetTop = el.offsetTop;
        return JSON.stringify(obj);
    }
    function resizeCanvas() {
        let canvas = document.getElementById('canvasHolder').querySelector('canvas');
        if (canvas) {
            canvas.width = window.innerWidth - canvas.offsetLeft;
            canvas.height = window.innerHeight - canvas.offsetTop - 7;
            theInstance.invokeMethodAsync('ResizeInBlazor', canvas.width, canvas.height);
        }
    }

    window.initRenderJS = (instance) => {
        window.theInstance = instance;
        window.addEventListener("resize", resizeCanvas);
        resizeCanvas();
    };
</script>
</body>
</html>